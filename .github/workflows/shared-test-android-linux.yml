name: Run Checks (Linux)

on:
  workflow_call:
    inputs:
      coverage:
        required: false
        type: boolean
        default: false
      coverage-verification:
        required: false
        type: boolean
        default: false
      cache-results:
        required: false
        type: boolean
        default: false
      cleanup:
        required: false
        type: boolean
        default: true
      projects:
        required: false
        type: string
        default: "[':app-android']"
      api-level:
        required: false
        type: string
        default: "['29']"
      target:
        required: false
        type: string
        default: "['default']"
      arch:
        required: false
        type: string
        default: "['x86']"
      device:
        required: false
        type: string
        default: "['Nexus 6']"
      emulator-options:
        required: false
        type: string
        default: '-no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim'
      disable-animations:
        required: false
        type: boolean
        default: true
      build-cache-dir:
        required: false
        type: string
        default: "['**/build-cache/**', 'caches/build-cache/**',  'caches/build-cache', 'caches', 'notifications']"

concurrency:
  group: validation-android-${{ github.workflow }}@${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest

    env:
      GITHUB: ${{ github.workspace }}

    strategy:
      matrix:
        project: ${{ fromJson(inputs.projects) }}
        api-level: ${{ fromJson(inputs.api-level) }}
        target: ${{ fromJson(inputs.target) }}
        arch: ${{ fromJson(inputs.arch) }}
        device: ${{ fromJson(inputs.device) }}


    name: Check ${{ matrix.project }} ${{ matrix.api-level }} ${{ matrix.target }} ${{ matrix.arch }} ${{ matrix.device }}
      steps:
      - name: Display runner context
        run: hostname -s

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-includes: ${{ inputs.build-cache-dir }}
          cache-read-only: true

      - name: Cleanup
        if: inputs.cleanup == true
        run: ./gradlew clean

      - name: Cache Konan
        uses: actions/cache@v3
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-konan-${{ hashFiles('*.gradle.kts') }}
            ${{ runner.os }}-konan-

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Cache Reports
        if: inputs.cache-results == true
        uses: actions/cache@v3
        with:
          path: |
            **/reports/detekt/detekt.xml
            **/reports/jacoco/**/*.xml
            **/test-results/**/*
          key: reports-${{ github.head_ref }}

      - name: Ensure active AVD
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          force-avd-creation: false
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.device }}
          disable-animations: ${{ inputs.disable-animations }}
          emulator-options: ${{ inputs.emulator-options }}
          script: echo "Enable Cache."

      - name: Run Instrumented Tests
        if: endsWith(matrix.project, ':') == false
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.device }}
          disable-animations: ${{ inputs.disable-animations }}
          emulator-options: ${{ inputs.emulator-options }}
          script: ./gradlew ${{ matrix.project }}:connectedCheck

      - name: Run Aggregated Instrumented Tests
        if: endsWith(matrix.project, ':') == true
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.device }}
          disable-animations: ${{ inputs.disable-animations }}
          emulator-options: ${{ inputs.emulator-options }}
          script: ./gradlew connectedCheck

      - name: Coverage Android
        if: inputs.coverage == true
        run: ./gradlew --no-daemon --stacktrace androidCoverage

      - name: Verification Android
        if: inputs.coverageVerification == true
        run: ./gradlew --no-daemon --stacktrace androidCoverageVerification

      - name: Publish Test Report
        if: failure()
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: '**/build/test-results/**/TEST-*.xml'
