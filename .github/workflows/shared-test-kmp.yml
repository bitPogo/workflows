name: Run Checks

on:
  workflow_call:
    inputs:
      platforms:
        required: true
        type: string


concurrency:
  group: validation-${{ github.workflow }}@${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    strategy:
      matrix:
        config: [
          { target: android, os: ubuntu-latest, tasks: testDebugUnitTest testReleaseUnitTest, continueOnError: false, cacheKey: linux-build },
          { target: ios, os: macos-latest, tasks: iosX64Test iosSimulatorArm64Test, continueOnError: false, cachekey: macos-build },
          { target: js, os: ubuntu-latest, tasks: jsTest, continueOnError: false, cacheKey: linux-build },
          { target: jvm, os: ubuntu-latest, tasks: jvmTest, continueOnError: false, cacheKey: linux-build },
          { target: linux, os: ubuntu-latest, tasks: linuxX64Test, continueOnError: false, cacheKey: linux-build },
          { target: macos, os: macos-latest, tasks: macosX64Test macosArm64Test, continueOnError: false, cachekey: macos-build },
          { target: mingw, os: windows-latest, tasks: mingwX64Test, continueOnError: false, cacheKey: win-build },
          { target: tvos, os: macos-latest, tasks: tvosX64Test tvosSimulatorArm64Test, continueOnError: false, cachekey: macos-build },
          { target: watchos, os: macos-latest, tasks: watchosX64Test watchosSimulatorArm64Test, continueOnError: false, cachekey: macos-build },
          { target: watchosLegacy, os: macos-latest, tasks: watchosX64Test watchosX86Test watchosSimulatorArm64Test, continueOnError: false, cachekey: macos-build }, # Note X86 breaks
        ]
    runs-on: ${{ matrix.config.os }}

    name: Check ${{ matrix.config.target }}
    steps:
      - name: Checkout Repo
        if: contains(fromJson(inputs.platforms), matrix.config.target)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        if: contains(fromJson(inputs.platforms), matrix.config.target)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'

      - name: Restore Build and Konan
        if: contains(fromJson(inputs.platforms), matrix.config.target)
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.konan
            ~/build
            ~/**/build
          key: ${{ matrix.config.cacheKey }}

      - name: Validate Gradle Wrapper
        if: contains(fromJson(inputs.platforms), matrix.config.target)
        uses: gradle/wrapper-validation-action@v1

      - name: Setup gradle
        if: contains(fromJson(inputs.platforms), matrix.config.target)
        uses: gradle/gradle-build-action@v2

      - name: Test ${{ matrix.config.target }} targets
        if: contains(fromJson(inputs.platforms), matrix.config.target)
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew ${{ matrix.config.tasks }}

      - name: Publish Test Report
        if: failure() && contains(fromJson(inputs.platforms), matrix.config.target)
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: '**/build/test-results/**/TEST-*.xml'
